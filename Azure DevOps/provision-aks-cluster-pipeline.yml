trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: DeployAKSCluster
  displayName: Deploy AKS Cluster
  jobs:
    - job: DeployAKSCluster_Plan
      displayName: Aks Cluster terraform plan
      steps:     
      - task: PublishPipelineArtifact@1
        displayName: Publish Artifacts
        inputs:
          targetPath: '$(System.DefaultWorkingDirectory)/terraform'
          artifact: 'terraform-out'
          publishLocation: 'pipeline'         
      - task: DownloadSecureFile@1
        displayName: Download SSH Key
        name: sshkey
        inputs:
          secureFile: 'aks-terraform-devops-ssh-key-ububtu.pub'
      - task: TerraformCLI@0
        displayName: Terraform Init
        inputs:
          command: 'init'
          workingDirectory: 'terraform'
          backendType: 'azurerm'
          backendServiceArm: 'sc-1'
          backendAzureRmResourceGroupName: 'Statefile-rg'
          backendAzureRmStorageAccountName: 'statefilestorageaccount'
          backendAzureRmContainerName: 'tfstatefiles'
          backendAzureRmKey: 'terraform-acr-aks-cluster.tfstate'
          allowTelemetryCollection: false
      
      - task: TerraformCLI@0
        displayName: Terraform Plan
        inputs:
          command: 'plan'
          workingDirectory: 'terraform'
          environmentServiceName: 'sc-1'
          commandOptions: '-var ssh_public_key=$(sshkey.secureFilePath) -out tfplan-$(Build.BuildId).out'
          allowTelemetryCollection: false

      - publish: $(System.DefaultWorkingDirectory)/terraform/tfplan-$(Build.BuildId).out
        artifact: 'terraform-plan'
        displayName: "Publish terraform plan"
      
    - job: waitForValidation
      dependsOn: DeployAKSCluster_Plan
      displayName: Wait for external validation  
      pool: server    
      timeoutInMinutes: 4320 # job times out in 3 days
      steps:   
      - task: ManualValidation@0
        timeoutInMinutes: 1440 # task times out in 1 day
        inputs:
          notifyUsers: |
            kalyan_kothuru@epam.com
          instructions: 'Please validate the terraform plan'
          onTimeout: 'resume'

    - job: DeployAKSCluster_Apply
      dependsOn: waitForValidation
      displayName: AKS Cluster Terraform Apply
      steps: 
      - task: DownloadSecureFile@1
        displayName: Download SSH Key
        name: sshkey
        inputs:
          secureFile: 'aks-terraform-devops-ssh-key-ububtu.pub'
          
      - download: current
        displayName: "Pull terraform plan artifact"
        artifact: terraform-plan
      - task: TerraformCLI@0
        displayName: Terraform Init
        inputs:
          command: 'init'
          workingDirectory: 'terraform'
          backendType: 'azurerm'
          backendServiceArm: 'sc-1'
          backendAzureRmResourceGroupName: 'Statefile-rg'
          backendAzureRmStorageAccountName: 'statefilestorageaccount'
          backendAzureRmContainerName: 'tfstatefiles'
          backendAzureRmKey: 'terraform-acr-aks-cluster.tfstate'
          allowTelemetryCollection: false  
      
      - task: CopyFiles@2
        inputs:
          SourceFolder: '$(Pipeline.Workspace)/terraform-plan'
          Contents: '**'
          TargetFolder: '$(Agent.TempDirectory)'
      - task: TerraformCLI@0
        displayName: Terraform Apply
        inputs:
          command: 'apply'
          workingDirectory: 'terraform'
          environmentServiceName: 'sc-1'
          commandOptions: '$(Pipeline.Workspace)/terraform-plan/tfplan-$(Build.BuildId).out'


- stage: DestroyAKSCluster
  dependsOn: DeployAKSCluster
  displayName: Destroy AKS Cluster
  jobs:
    - deployment: DestroyAKSCluster_Manual_Approve
      displayName: DestroyAKSCluster
      pool:
       vmImage: 'ubuntu-latest'
      environment: aks_cluster_destroy      
      strategy:
        runOnce:
          deploy:
            steps:       
            - task: DownloadSecureFile@1
              displayName: Download SSH Key
              name: sshkey
              inputs:
                secureFile: 'aks-terraform-devops-ssh-key-ububtu.pub'
            - task: TerraformCLI@0
              displayName: Terraform Init
              inputs:
                command: 'init'
                workingDirectory: '$(Pipeline.Workspace)/terraform-out'
                backendType: 'azurerm'
                backendServiceArm: 'sc-1'
                backendAzureRmResourceGroupName: 'Statefile-rg'
                backendAzureRmStorageAccountName: 'statefilestorageaccount'
                backendAzureRmContainerName: 'tfstatefiles'
                backendAzureRmKey: 'terraform-acr-aks-cluster.tfstate'
                allowTelemetryCollection: false
            - task: TerraformCLI@0
              displayName: Terraform Plan
              inputs:
                command: 'plan'
                workingDirectory: '$(Pipeline.Workspace)/terraform-out'
                environmentServiceName: 'sc-1'
                commandOptions: '-destroy -var ssh_public_key=$(sshkey.secureFilePath) -out $(Pipeline.Workspace)/terraform-out/tfplan-destroy-$(Build.BuildId).out'
                allowTelemetryCollection: false
            - task: TerraformCLI@0
              displayName: Terraform Destroy
              inputs:
                command: 'destroy'
                workingDirectory: '$(Pipeline.Workspace)/terraform-out'
                environmentServiceName: 'sc-1'
                commandOptions: '-var ssh_public_key=$(sshkey.secureFilePath)'
                allowTelemetryCollection: false

- stage: DestroyAKSCluster2
  displayName: Destroy Aks Cluster (Scheduled)
  dependsOn: DeployAKSCluster
  jobs:
    - deployment: DestroyAKSCluster_AutoApprove
      displayName: DestroyAKSCluster-AutoApprove
      pool:
       vmImage: 'ubuntu-latest'
      environment: aks_cluster_destroy_auto_approve      
      strategy:
        runOnce:
          deploy:
            steps:       
            - task: DownloadSecureFile@1
              displayName: Download SSH Key
              name: sshkey
              inputs:
                secureFile: 'aks-terraform-devops-ssh-key-ububtu.pub'
            - task: TerraformCLI@0
              displayName: Terraform Init
              inputs:
                command: 'init'
                workingDirectory: '$(Pipeline.Workspace)/terraform-out'
                backendType: 'azurerm'
                backendServiceArm: 'sc-1'
                backendAzureRmResourceGroupName: 'Statefile-rg'
                backendAzureRmStorageAccountName: 'statefilestorageaccount'
                backendAzureRmContainerName: 'tfstatefiles'
                backendAzureRmKey: 'terraform-acr-aks-cluster.tfstate'
                allowTelemetryCollection: false
            - task: TerraformCLI@0
              displayName: Terraform Plan
              inputs:
                command: 'plan'
                workingDirectory: '$(Pipeline.Workspace)/terraform-out'
                environmentServiceName: 'sc-1'
                commandOptions: '-destroy -var ssh_public_key=$(sshkey.secureFilePath) -out $(Pipeline.Workspace)/terraform-out/tfplan-destroy-$(Build.BuildId).out'
                allowTelemetryCollection: false
            - task: TerraformCLI@0
              displayName: Terraform Destroy
              inputs:
                command: 'destroy'
                workingDirectory: '$(Pipeline.Workspace)/terraform-out'
                environmentServiceName: 'sc-1'
                commandOptions: '-var ssh_public_key=$(sshkey.secureFilePath)'
                allowTelemetryCollection: false                